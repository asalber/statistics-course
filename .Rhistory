y <- data.females.placebo.young[["Pain.Relief.24h"]]
result.var <- var.test (x, y)
if (result.var[["p.value"]]<0.05){
result <- t.test (x, y, alternative="greater", var.equal=FALSE)
} else {
result <- t.test (x, y, alternative="greater", var.equal=TRUE)
}
writeLines(paste("P-value:", round(result$p.value,4)))
x <- data.males.placebo[["Pain.Relief.Max"]]
y <- data.males.placebo[["Pain.Relief.24h"]]
result <- t.test (x, y, alternative="two.sided", paired=TRUE)
writeLines(paste("P-value:", round(result$p.value,4)))
x <- data.males.ibuprofen[["Pain.Relief.Max"]]
y <- data.males.ibuprofen[["Pain.Relief.24h"]]
result <- t.test (x, y, alternative="two.sided", paired=TRUE)
writeLines(paste("P-value:", round(result$p.value,4)))
data <- cbind(data, subjectid=factor(1:nrow(data)))
anova.results <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
data <- cbind(data, subjectid=factor(1:nrow(data)))
anova.results <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
data <- cbind(data, subjectid=factor(1:nrow(data)))
View(data)
result <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
data <- cbind(data, subjectid=factor(1:nrow(data)))
result <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
data <- cbind(data, subjectid=factor(1:nrow(data)))
result <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
library(knitr)
library(knitr)
library(rk.Teaching)
library(rk.Teaching)
library(tennis.elbow)
data(tennis.elbow, package="tennis.elbow")
data <- tennis.elbow
confint <- function (ci){
return(paste(attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", round(ci$conf.int[1],4), " , ", round(ci$conf.int[2],4), ")", sep=""));
}
# Function to print the confidence interval for proportions expresses in percentages
confint.percentage <- function (ci){
return(paste(attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", round(ci$conf.int[1]*100,2), " , ", round(ci$conf.int[2]*100,2), ")", sep=""));
}
# confint <- function (ci){
#   return(paste("Intervalo: ({1:NUMERICAL:=", round(ci$conf.int[1],4), ":0.001} , {1:NUMERICAL:=", round(ci$conf.int[2],4), ":0.001})\nPor tanto, se puede afirmar: {2:MULTICHOICE:=No existen diferencias significativas\n~%-25% Opcion 2\n~%-25% Opcion 3\n~%-25% Opcion 4\n~%-25% El resto de las opciones son falsas.}" , sep=""));
# }
#
# confint.percentage <- function (ci){
#   return(paste("Intervalo: ({1:NUMERICAL:=", round(ci$conf.int[1]*100,2), ":0.1} , {1:NUMERICAL:=", round(ci$conf.int[2]*100,2), ":0.1})\nPor tanto, se puede afirmar: {2:MULTICHOICE:=No existen diferencias significativas\n~%-25% Opcion 2\n~%-25% Opcion 3\n~%-25% Opcion 4\n~%-25% El resto de las opciones son falsas.}" , sep=""));
# }
# Function to interpret the coefficient of variati
cv.interpretation <- function(x) {
if (x<0.3) return("The dispersion around the mean is very low and the mean is very representative.")
else if (x<0.7) return("The dispersion around the mean is moderate and the mean is moderately representative.")
else return("The dispersion around the mean is very high and the mean is less representative.")
}
# Function to interpret the coefficient of skewess
skewness.interpretation <- function(x) {
if (x< -2) return("The sample distribution is too much left skew to come from a normal population.")
else if (x< -1) return("The sample distribution is quite left skew but we can assume that it comes from a normal population.")
else if (x< -0.2) return("The sample distribution is left skew but we can assume that it comes from a normal population.")
else if (x<0) return("The sample distribution is a little bit left skew but almost symmetric.")
else if (x==0) return("The sample distribution is symmetric.")
else if (x<=0.2) return("The sample distribution is a little bit right skew but almost symmetric.")
else if (x<=1) return("The sample distribution is right skew but we can assume that it comes from a normal population.")
else if (x<=2) return("The sample distribution is quite right skew but we can assume that it comes from a normal population.")
else return("The sample distribution is too much right skew to come from a normal population.")
}
# Function to interpret the coefficient of kurtosis
kurtosis.interpretation <- function(x) {
if (x< -2) return("The sample distribution is too much platykurtic to come from a normal population.")
else if (x< -1) return("The sample distribution is quite platykurtic but we can assume that it comes from a normal population.")
else if (x< -0.2) return("The sample distribution is platykurtic but we can assume that it comes from a normal population.")
else if (x<0) return("The sample distribution is a little bit platykurtic but almost mesokurtic.")
else if (x==0) return("The sample distribution is mesokurtic")
else if (x<=0.2) return("The sample distribution is a little bit leptokurtic but almost mesokurtic.")
else if (x<=1) return("The sample distribution is leptokurtic but we can assume that it comes from a normal population.")
else if (x<=2) return("The sample distribution is quite leptokurtic but we can assume that it comes from a normal population.")
else return("The sample distribution is too much leptokurtic to come from a normal population.")
}
# Function to interpret the coefficient of determination
r2.interpretation <- function(x) {
if (x<0.2) return("There is no linear relation between the variables.")
else if (x<0.4) return("There is a weak linear relation between the varibles.")
else if (x<0.6) return("There is a moderate linear relation between the varibles.")
else if (x<0.8) return("There is a strong linear relation between the varibles.")
else return("There is a very strong relation between the variables.")
}
# Function to interpret the correlation coefficient
r.interpretation <- function(x) {
if (x< -sqrt(0.8)) return("There is a very strong inverse linear relation between the varibles.")
else if (x< -sqrt(0.6)) return("There is a strong inverse linear relation between the varibles.")
else if (x< -sqrt(0.4)) return("There is a moderate inverse linear relation between the varibles.")
else if (x< -sqrt(0.2)) return("There is a weak inverse linear relation between the variables.")
else if (x<0) return("There is a very weak inverse linear relation between the variables.")
else if (x==0) return("There is no linear relation between the variables.")
else if (x<0.2) return("There is a very weak direct linear relation between the variables.")
else if (x<sqrt(0.4)) return("There is a weak direct linear relation between the varibles.")
else if (x<sqrt(0.6)) return("There is a moderate direct linear relation between the varibles.")
else if (x<sqrt(0.8)) return("There is a strong direct linear relation between the varibles.")
else return("There is a very strong direct relation between the variables.")
}
# Function to compute the best regression model
best.regression.model <- function (y, x){
result <- regcomp(y, x, models=c('linear','Quadratic','cubic','potential','exponential','logarithmic','inverse','sigmoid'))
best.model <- result[1,"Model"]
writeLines(paste("Best regression model: ", best.model))
if (best.model == "Linear")
model <- lm(y ~ x)
else if (best.model == "Quadratic")
model <- lm(y ~ x + I(x^2))
else if (best.model == "Cubic")
model <- lm(y ~ x + I(x^2) + I(x^3))
else if (best.model == "Exponential")
model <- lm(log(y) ~ x)
else if (best.model == "Logarithmic")
model <- lm(y ~ log(x))
else if (best.model == "Potential")
model <- lm(log(y) ~ log(x))
else if (best.model == "Inverse")
model <- lm(y ~ I(1/x))
else
model <- lm(log(y) ~ I(1/x))
return(model)
}
# Function to extract answers from the answers sheet
extract_answers <- function(answer){
return(c(strsplit(answer, "part 1:|; part 2:|; part 3:|; part 4:|; part 5:|; part 6:|; part 7:|; part 8:|; part 9:|; part 10:|; part 11:|; part 12:|; part 13:")[[1]], ""))
}
# Function to correct a confidence interval
correct.confint <- function (ci, li, ls, error=0.0001){
writeLines("Your answer")
writeLines(paste(" ", attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", li, " , ", ls, ")", sep=""));
writeLines("Correct answer")
writeLines(paste(" ", attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", round(ci$conf.int[1],5), " , ", round(ci$conf.int[2],5), ")", sep=""))
if (is.na(li) | is.na(ls))
return(0)
if (abs(ci$conf.int[1]-li)<error & abs(ci$conf.int[2]-ls)<error)
return(1)
else
return(0)
}
# Function to correct a confidence interval for a percentage
correct.confint.percentage <- function (ci, li, ls, error=0.01){
writeLines("Your answer")
writeLines(paste(" ", attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", li, " , ", ls, ")", sep=""));
writeLines("Correct answer")
writeLines(paste(" ", attr(ci$conf.int, "conf.level")*100, "% confidence interval: (", round(ci$conf.int[1]*100,5), " , ", round(ci$conf.int[2]*100,5), ")", sep=""))
if (is.na(li) | is.na(ls))
return(0)
if (abs(ci$conf.int[1]*100-li)<error & abs(ci$conf.int[2]*100-ls)<error)
return(1)
else
return(0)
}
# Function to correct the interpretation of a confidence interval
correct.interpretation <- function(correct, answer){
answer <- trimws(answer, "l")
cat(paste("Interpetation\nYour answer\n", answer,  "\nCorrect answer\n"), correct)
if (answer=="")
return (0)
if (answer==correct)
return(1)
else
return(0)
}
# Function to correct a sample size computation
correct.sample.size <- function(correct, answer, error=1){
writeLines("Your answer")
writeLines(paste(" ", answer, sep=""));
writeLines("Correct answer")
writeLines(paste(" ", round(correct$n,2), sep=""))
if (is.na(answer))
return(0)
if (abs(correct$n-answer)<error)
return(1)
else
return(0)
}
score = 0
data <- cbind(data, subjectid=factor(1:nrow(data)))
result <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
writeLines(paste("P-value:", round(results[["ANOVA"]]$p,4)))
writeLines(paste("P-value:", round(result[["ANOVA"]]$p,4)))
pairs <- TukeyHSD(result[["aov"]])
pairs
result
pairs[[4]]
length(pairs)
require(ez)
require(nlme)
require(multcomp)
data <- cbind(data, subjectid=factor(1:nrow(data)))
result <- ezANOVA(data=data[!is.na(data$Pain.Relief.12h),], dv=.(Pain.Relief.12h), wid=.(subjectid), between=.(Gender.Treatment), return_aov=TRUE)
pairs <- TukeyHSD(result[["aov"]])
pairs[[1]]
pairs[[1]][4,4]
pairs <- TukeyHSD(result[["aov"]])
writeLines(paste("P-value:", round(pairs[[1]][4,4],4)))
cuasidesv <- descriptiveStats(data["Pain.Relief.Global"], statistics=c('sd'), quantiles= c())
cuasidesv
x <- data[["Pain.Relief.Global"]]
result <- sampleSizeOneMean(mean=, sd=sd(x), sig.level= 1-0.95, error=0.02,error.type="absolute")
writeLines(paste("Sample size:", round(result$n)))
x <- data[["Pain.Relief.Global"]]
result <- sampleSizeOneMean(mean=, sd=sd(x), sig.level= 1-0.95, error=0.2,error.type="absolute")
writeLines(paste("Sample size:", round(result$n)))
freq <- nrow(data.females)
data.males <- subset(data, Gender=="male")
data.females <- subset(data, Gender=="female")
freq <- nrow(data.females)
n  <- nrow(data)
freq
n
freq <- nrow(data.females)
n  <- nrow(data)
result <- sampleSizeOneProportion(p=freq/n, sig.level= 1-0.90, error=0.05)
writeLines(paste("Sample size:", round(result$n)))
confint <- function (ci){
return(paste("Intervalo: ({1:NUMERICAL:=", round(ci$conf.int[1],4), ":0.001} , {1:NUMERICAL:=", round(ci$conf.int[2],4), ":0.001})\nTherefore, we can assert: {2:MULTICHOICE:=There is no significant difference\n~%-25% Opcion 2\n~%-25% Opcion 3\n~%-25% Opcion 4\n~%-25% The other assertions are false.}" , sep=""));
}
confint.percentage <- function (ci){
return(paste("Intervalo: ({1:NUMERICAL:=", round(ci$conf.int[1]*100,2), ":0.1} , {1:NUMERICAL:=", round(ci$conf.int[2]*100,2), ":0.1})\nTherefore, we can assert: {2:MULTICHOICE:=There is no significant difference\n~%-25% Opcion 2\n~%-25% Opcion 3\n~%-25% Opcion 4\n~%-25% The other assertions are false.}" , sep=""));
}
library(knitr)
library(rmarkdown)
library(xlsx)
library(dplyr)
data.answers <- arrange(read.csv("answers.csv"), Surname)
grades <- data.frame(Surname=character(0), Name=character(0), Grade=numeric(0))
library(knitr)
library(rmarkdown)
library(xlsx)
library(dplyr)
datos.respuestas <- arrange(read.csv("respuestas.csv"), Apellido)
notas.trabajo <- data.frame(Apellido=character(0), Nombre=character(0), Nota=numeric(0))
factorial(5)
factorial(20)
2.8*8
source('/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_manual/img/distribution_shapes.R', echo=TRUE)
par(cex.lab=1.2)
income <- seq(2500,207500,5000)/1000
counts <- c(4235, 4071, 6324, 6470, 6765, 6222, 6354, 5743, 5203, 5002, 5078, 4140, 4367, 3733, 3683, 3650, 3354, 2893, 2850, 2452, 2792, 2232, 2158, 1748, 1987, 1675, 1474, 1380, 1220, 1111, 1313, 1017, 993, 761, 822, 700, 677, 536, 561, 431, 314, 215)
breaks <- seq(0,210000,5000)/1000
data <- rep(income, counts)
hist(data, main="USA househod income dristribution", breaks=breaks, xaxt="n", xlab="Yearly income (thousand dollars)", ylab="Relative frequency", col=blueceu, prob=T)
axis(side=1, at=breaks, labels=breaks, las=2)
blueceu <- rgb(5,161,230,120,maxColorValue = 255) #"#0099CC"
par(cex.lab=1.2)
income <- seq(2500,207500,5000)/1000
counts <- c(4235, 4071, 6324, 6470, 6765, 6222, 6354, 5743, 5203, 5002, 5078, 4140, 4367, 3733, 3683, 3650, 3354, 2893, 2850, 2452, 2792, 2232, 2158, 1748, 1987, 1675, 1474, 1380, 1220, 1111, 1313, 1017, 993, 761, 822, 700, 677, 536, 561, 431, 314, 215)
breaks <- seq(0,210000,5000)/1000
data <- rep(income, counts)
hist(data, main="USA househod income dristribution", breaks=breaks, xaxt="n", xlab="Yearly income (thousand dollars)", ylab="Relative frequency", col=blueceu, prob=T)
axis(side=1, at=breaks, labels=breaks, las=2)
source('/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_manual/img/distribution_shapes.R', echo=TRUE)
blueceu <- rgb(5,161,230,120,maxColorValue = 255) #"#0099CC"
redceu <- rgb(238,50,36,120,maxColorValue = 255) #"#FF3333"
greenceu <- rgb(194,205,25,255,maxColorValue = 255) #"#CCCC33"
purpleceu <- rgb(169,78,145,120,maxColorValue = 255) #"#996699"
greyceu <- rgb(117,117,97,255,maxColorValue = 255) #"#666666"
blueceu
redceu <- rgb(238,50,36,120,maxColorValue = 255) #"#FF3333"
redceu
orangeceu <- rgb(248,131,121,255,maxColorValue = 255)#F88379
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceu , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
library(tikzDevice)
library(plyr)
library(plotly)
require(Hmisc)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceu , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
setwd("/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_course")
data <- read.table("data/children_cars_data.csv", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
View(data)
data <- read.table("data/height_weight_data.csv", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
library(agricolae)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceu , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
blueceu <- rgb(5,161,230,255,maxColorValue = 255) #0099CC
blueceulight <- rgb(34,56,65,255,maxColorValue = 255) #223841
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceuligth , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
blueceulight <- rgb(34,56,65,255,maxColorValue = 255) #223841
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceuligth , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceulight , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
blueceulight <- rgb(137,211,243,255,maxColorValue = 255) #89D3F3
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceulight , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
tikz(file="img/descriptive/factor_histogram.tex", width=5, height=5)
options(digits=1)
par(cex.lab=1.2)
out <- histbackback(split(data$height, data$sex), xlim=c(-10,10), main = 'Frequency distribution histogram of Height by Gender', xlab=c("male", "female"), ylab="Height")
abline(v= (-8:8)*2 , col ="gray" , lty =3)
barplot(-out$left, col=blueceulight , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col=orangeceu, horiz=TRUE, space=0, add=TRUE, axes=FALSE)
dev.off()
tikz(file="img/descriptive/factor_box_plot.tex", width=5, height=5)
options(digits=2)
par(cex.lab=1.2)
boxplot(height~sex, main="Frequency distribution box plot of Height by Gender", ylab="Height", xlab="Gender", ylim=c(150,200), labels=c("Male","Female"), col=c(blueceulight,orangeceu), data=data)
dev.off()
# Distributions with different shapes
# Author: Alfredo Sánchez Alberca (asalber@ceu.es)
setwd("/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_manual")
library(tikzDevice)
# Colors
blueceu <- rgb(5,161,230,255,maxColorValue = 255) #0099CC
blueceulight <- rgb(137,211,243,255,maxColorValue = 255) #89D3F3
redceu <- rgb(238,50,36,255,maxColorValue = 255) #FF3333
greenceu <- rgb(194,205,255,255,maxColorValue = 255) #CCCC33
orangeceu <- rgb(248,131,121,255,maxColorValue = 255)#F88379
purpleceu <- rgb(169,78,145,255,maxColorValue = 255) #996699
greyceu <- rgb(117,117,97,255,maxColorValue = 255) #666666
# Right-skewed distribution
tikz(file="img/descriptive/right_skewed_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
income <- seq(2500,207500,5000)/1000
counts <- c(4235, 4071, 6324, 6470, 6765, 6222, 6354, 5743, 5203, 5002, 5078, 4140, 4367, 3733, 3683, 3650, 3354, 2893, 2850, 2452, 2792, 2232, 2158, 1748, 1987, 1675, 1474, 1380, 1220, 1111, 1313, 1017, 993, 761, 822, 700, 677, 536, 561, 431, 314, 215)
breaks <- seq(0,210000,5000)/1000
data <- rep(income, counts)
hist(data, main="USA househod income dristribution", breaks=breaks, xaxt="n", xlab="Yearly income (thousand dollars)", ylab="Relative frequency", col=blueceu, prob=T)
axis(side=1, at=breaks, labels=breaks, las=2)
dev.off()
# Left-skewed distribution
tikz(file="img/descriptive/left_skewed_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
counts <- c(65, 116, 69, 78, 319, 501, 633, 655, 848, 1226, 1633, 2459, 3375, 4669, 6152, 7436, 9526, 12619, 12455, 7113, 2104)
breaks <- seq(0,100,5)
data <- rep(breaks, counts)
hist(data, main="Distribution of age at death of australian males",  xlab="Age of dead", ylab="Relative frequency", breaks = breaks, xaxt="n", col=blueceu, prob=T)
axis(side=1, at=breaks, labels=breaks)
dev.off()
# Symmetric distribution
tikz(file="img/descriptive/bimodal_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
counts <- c(35, 20, 18, 48, 75, 67, 43, 22, 14, 21, 23, 47, 63, 44, 25, 15)
breaks <- seq(8.5,23.5,1)
data <- rep(breaks, counts)
breaks <- seq(8,24)
hist(data, main="Distribution of clients arrival times in a restaurant",  xlab="Time", ylab="Relative frequency", breaks = breaks, xaxt="n", col=blueceu, prob=T)
axis(side=1, at=breaks, labels=breaks)
dev.off()
# Distributions with different shapes
# Author: Alfredo Sánchez Alberca (asalber@ceu.es)
setwd("/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_manual")
library(tikzDevice)
# Colors
blueceu <- rgb(5,161,230,255,maxColorValue = 255) #0099CC
blueceulight <- rgb(137,211,243,255,maxColorValue = 255) #89D3F3
redceu <- rgb(238,50,36,255,maxColorValue = 255) #FF3333
greenceu <- rgb(194,205,255,255,maxColorValue = 255) #CCCC33
orangeceu <- rgb(248,131,121,255,maxColorValue = 255)#F88379
purpleceu <- rgb(169,78,145,255,maxColorValue = 255) #996699
greyceu <- rgb(117,117,97,255,maxColorValue = 255) #666666
# Right-skewed distribution
tikz(file="img/descriptive/right_skewed_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
income <- seq(2500,207500,5000)/1000
counts <- c(4235, 4071, 6324, 6470, 6765, 6222, 6354, 5743, 5203, 5002, 5078, 4140, 4367, 3733, 3683, 3650, 3354, 2893, 2850, 2452, 2792, 2232, 2158, 1748, 1987, 1675, 1474, 1380, 1220, 1111, 1313, 1017, 993, 761, 822, 700, 677, 536, 561, 431, 314, 215)
breaks <- seq(0,210000,5000)/1000
data <- rep(income, counts)
hist(data, main="USA househod income dristribution", breaks=breaks, xaxt="n", xlab="Yearly income (thousand dollars)", ylab="Relative frequency", col=blueceulight, prob=T)
axis(side=1, at=breaks, labels=breaks, las=2)
dev.off()
# Left-skewed distribution
tikz(file="img/descriptive/left_skewed_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
counts <- c(65, 116, 69, 78, 319, 501, 633, 655, 848, 1226, 1633, 2459, 3375, 4669, 6152, 7436, 9526, 12619, 12455, 7113, 2104)
breaks <- seq(0,100,5)
data <- rep(breaks, counts)
hist(data, main="Distribution of age at death of australian males",  xlab="Age of dead", ylab="Relative frequency", breaks = breaks, xaxt="n", col=blueceulight, prob=T)
axis(side=1, at=breaks, labels=breaks)
dev.off()
# Symmetric distribution
tikz(file="img/descriptive/bimodal_distribution_example.tex", width=7, height=5)
par(cex.lab=1.2)
counts <- c(35, 20, 18, 48, 75, 67, 43, 22, 14, 21, 23, 47, 63, 44, 25, 15)
breaks <- seq(8.5,23.5,1)
data <- rep(breaks, counts)
breaks <- seq(8,24)
hist(data, main="Distribution of clients arrival times in a restaurant",  xlab="Time", ylab="Relative frequency", breaks = breaks, xaxt="n", col=blueceulight, prob=T)
axis(side=1, at=breaks, labels=breaks)
dev.off()
x <- rt(1000000,4)
m <- mean(x)
par(cex.lab=1.2)
hist(x, prob=T, breaks=seq(-100,100,by=0.2), xlim=c(-4.1,4.1), ylim=c(0,0.4), main="Leptokurtic distribution $g_2>0$", xlab ="", ylab="Relative frequency", col=blueceulight, axes=F)
axis(1,at=m,labels="$\\bar x$")
axis(2)
f <- function (z){return(dnorm(z,mean=0,sd=sqrt(2)))}
curve(f, add=TRUE, col=redceu, lwd=2)
data <- read.table("data/children_cars_data.csv", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
tikz(file="img/descriptive/boxplot_children.tex", width=7, height=5)
par(cex.lab=1.2)
boxplot(data$children, horizontal=TRUE, col=blueceulight, pch=16, main="Box plot of number of children", xlab="Number of children")
dev.off()
setwd("/media/alf/datos/drive/CEU/DOCENCIA/materiales/estadistica/presentaciones/statistics_course")
data <- read.table("data/newborn_weights.csv", header=TRUE, sep=" ", na.strings="NA", dec=".", strip.white=TRUE)
tikz(file="img/descriptive/boxplot.tex", width=7, height=5)
par(cex.lab=1.2)
boxplot(data$weight, horizontal=TRUE, col=blueceulight, pch=16, main="Box plot of newborn weights", xlab="Weight (Kg)")
text(2.9,0.75,expression(italic(Q[1])))
text(3.1,0.75,expression(italic(Q[2])))
text(3.4,0.75,expression(italic(Q[3])))
text(1.95,0.95,"Min")
text(4.5,0.95,"Max")
text(1.95,1.06,"Outlier",col="red")
text(4.5,1.06,"Outlier",col="red")
dev.off()
data <- read.table("data/children_cars_data.csv", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
tikz(file="img/descriptive/boxplot_children.tex", width=7, height=5)
par(cex.lab=1.2)
boxplot(data$children, horizontal=TRUE, col=blueceulight, pch=16, main="Box plot of number of children", xlab="Number of children")
dev.off()
x <- rnorm(1000000)
m <- mean(x)
tikz(file="img/descriptive/symmetrical_distribution.tex", width=7, height=5)
layout(matrix(c(1,2),2,1),heights=c(3,1))
par(mai=c(0,1,0.5,0),cex.lab=1.2)
hist(x,xlim=c(-3.5,3.5),breaks=50, ylim=c(0,0.4), xaxt="n", prob=T, main="Symmetrical distribution $g1=0$", xlab ="", ylab="Relative frequency", col=blueceulight)
axis(1,at=m,labels="$\\bar x=Me$")
par(mai=c(0,1,0,0))
boxplot(x,horizontal=TRUE,axes=FALSE, outline=FALSE, col=blueceulight)
dev.off()
x <- rf(1000000,8,8)
m <- mean(x)
me <- median(x)
tikz(file="img/descriptive/left_skewed_distribution.tex", width=7, height=5)
layout(matrix(c(1,2),2,1),heights=c(3,1))
par(mai=c(0,1,0.5,0),cex.lab=1.2)
hist(-x, xaxt="n", breaks=700, xlim=c(-5,0), prob=T, main="Left-skewed distribution $g_1<0$", ylab="Relative frequency", col=blueceulight)
axis(1,at=c(-m,-me),labels=c("$\\bar x$","$Me$"))
par(mai=c(0,1,0,0))
boxplot(-x, horizontal=TRUE, ylim=c(-5,0), axes=FALSE, outline=FALSE, col=blueceulight)
dev.off()
tikz(file="img/descriptive/right_skewed_distribution.tex", width=7, height=5)
layout(matrix(c(1,2),2,1),heights=c(3,1))
par(mai=c(0,1,0.5,0),cex.lab=1.2)
hist(x, xaxt="n", breaks=700, xlim=c(0,5), prob=T, main="Right-skewed distribution $g_1>0$", ylab="Relative frequency", col=blueceulight)
axis(1,at=c(m,me),labels=c("$\\bar x$","$Me$"))
par(mai=c(0,1,0,0))
boxplot(x, horizontal=TRUE, ylim=c(0,5), axes=FALSE, outline=FALSE, col=blueceulight)
dev.off()
par(cex.lab=1.2)
x <- rnorm(1000000)
m <- mean(x)
tikz(file="img/descriptive/mesokurtic_distribution.tex", width=7, height=5)
hist(x,xlim=c(-3.5,3.5), breaks=50, ylim=c(0,0.4),prob=T, main="Mesokurtic distribution $g_2=0$" , xlab ="", ylab="Relative frequency", col=blueceulight, axes=F)
axis(1,at=m,labels="$\\bar x$")
axis(2)
curve(dnorm, from=-3.5, to=3.5, add=TRUE, col=redceu, lwd=2)
dev.off()
x1 <- runif(200000,-3,3)
x2 <- runif(200000,-3,3)
x3 <- runif(200000,-3,3)
x  <- x1+x2+x3
m <- mean(x)
tikz(file="img/descriptive/platykurtic_distribution.tex", width=7, height=5)
par(cex.lab=1.2)
hist(x, prob=T, breaks=50, ylim=c(0,0.2), main="Platykurtic distribution $g_2<0$", xlab ="", ylab="Relative frequency", col=blueceulight, axes=F)
axis(1,at=m,labels="$\\bar x$")
axis(2)
f <- function (z){return(dnorm(z,mean=0,sd=2.5))}
curve(f, add=TRUE, col=redceu, lwd=2)
dev.off()
x <- rt(1000000,4)
m <- mean(x)
tikz(file="img/descriptive/leptokurtic_distribution.tex", width=7, height=5)
par(cex.lab=1.2)
hist(x, prob=T, breaks=seq(-100,100,by=0.2), xlim=c(-4.1,4.1), ylim=c(0,0.4), main="Leptokurtic distribution $g_2>0$", xlab ="", ylab="Relative frequency", col=blueceulight, axes=F)
axis(1,at=m,labels="$\\bar x$")
axis(2)
f <- function (z){return(dnorm(z,mean=0,sd=sqrt(2)))}
curve(f, add=TRUE, col=redceu, lwd=2)
dev.off()
